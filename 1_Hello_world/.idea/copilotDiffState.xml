<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/第二章/猜数字游戏.cpp">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/第二章/猜数字游戏.cpp" />
              <option name="originalContent" value="// 猜一猜心里数字&#10;// 1.定义一个变量，数字类型，内容随意（1~10范围）。&#10;// 2.基于cin语句输入猜想的数字，判断输入的数字是猜对或猜大、猜小了。&#10;// 3.需要一直能猜测,直到猜出才停止&#10;&#10;#include &lt;iostream&gt;&#10;using namespace std;&#10;&#10;int main()&#10;{&#10;    // 定义一个变量记录心里数字&#10;    int number = 7;&#10;    int guess;&#10;    cout &lt;&lt; &quot;欢迎来到猜数字游戏,请输入你猜的数字(1~10):&quot;&lt;&lt; endl;&#10;&#10;    // 一直猜，直到猜对为止&#10;    do&#10;    {&#10;        cin &gt;&gt; guess;&#10;        if (guess &lt; number)&#10;        {&#10;            cout &lt;&lt; &quot;猜小了，请再试一次:&quot; &lt;&lt; endl;&#10;        }&#10;        else if (guess &gt; number)&#10;        {&#10;            cout &lt;&lt; &quot;猜大了，请再试一次:&quot; &lt;&lt; endl;&#10;        }&#10;        else&#10;        {&#10;            cout &lt;&lt; &quot;恭喜你，猜对了!&quot; &lt;&lt; endl;&#10;        }&#10;    } while (guess != number);&#10;}&#10;" />
              <option name="updatedContent" value="// 猜一猜心里数字&#10;// 1.定义一个变量，数字类型，内容随意（1~10范围）。&#10;// 2.基于cin语句输入猜想的数字，判断输入的数字是猜对或猜大、猜小了。&#10;// 3.需要一直能猜测,直到猜出才停止&#10;&#10;#include &lt;iostream&gt;&#10;using namespace std;&#10;&#10;int main()&#10;{&#10;    // 定义一个变量记录心里数字&#10;    int number = 7;&#10;    int guess;&#10;    cout &lt;&lt; &quot;欢迎来到猜数字游戏,请输入你猜的数字(1~10):&quot;&lt;&lt; endl;&#10;&#10;    // 一直猜，直到猜对为止&#10;    do&#10;    {&#10;        cin &gt;&gt; guess; // 读取用户输入&#10;        if (guess &lt; number)&#10;        {&#10;            cout &lt;&lt; &quot;猜小了，请再试一次:&quot; &lt;&lt; endl; // 提示猜小了&#10;        }&#10;        else if (guess &gt; number)&#10;        {&#10;            cout &lt;&lt; &quot;猜大了，请再试一次:&quot; &lt;&lt; endl; // 提示猜大了&#10;        }&#10;        else&#10;        {&#10;            cout &lt;&lt; &quot;恭喜你，猜对了!&quot; &lt;&lt; endl; // 猜对了，游戏结束&#10;        }&#10;    } while (guess != number); // 判断是否猜对，未猜对则继续循环&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/第二章/逻辑判断的综合案例.cpp">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/第二章/逻辑判断的综合案例.cpp" />
              <option name="originalContent" value="/*&#10;*案例需求（猜扑克牌）：&#10;* 随机产出3份信息：&#10;*第一份信息：1~10的数字，代表扑克牌1~10&#10;*第二份信息：字符串，红色或黑色，代表扑克牌的花色&#10;*第三份信息：字符串，如果是红色产出红桃或方块，如果是黑色产出黑桃或梅花&#10;* 案例要求:&#10;*通过嵌套判断，并结合判断语句猜测上述信息，如&#10;*先猜数字，成功后猜颜色，再成功猜测具体的花型&#10;*/&#10;#include &lt;iostream&gt;&#10;#include &lt;random&gt;&#10;&#10;using namespace std;&#10;&#10;// 生成[min, max]范围内的随机整数&#10;int get_random_num(int min, int max)&#10;{&#10;    // 创建随机数生成器&#10;    random_device rd;&#10;    mt19937 gen(rd());&#10;&#10;    // 定义均匀分布&#10;    uniform_int_distribution&lt;&gt; dis(min, max);&#10;&#10;    // 生成随机数&#10;    int random_number = dis(gen);&#10;    return random_number;&#10;}&#10;&#10;int main ()&#10;{&#10;    // 第一份信息：1~10的数字，代表扑克牌1~10&#10;    int num = get_random_num(1, 10);&#10;    // 第二份信息：字符串，红色0或黑色1，代表扑克牌的花色&#10;    string color = get_random_num(0, 1) ? &quot;红色&quot; : &quot;黑色&quot;;&#10;    // 第三份信息：字符串，如果是红色产出红桃或方块，如果是黑色产出黑桃或梅花&#10;    string suit;&#10;    if (color == &quot;红色&quot;)&#10;    {&#10;        suit = get_random_num(0, 1) ? &quot;红桃&quot; : &quot;方块&quot;;&#10;    }&#10;    else&#10;    {&#10;        suit = get_random_num(0, 1) ? &quot;黑桃&quot; : &quot;梅花&quot;;&#10;    }&#10;&#10;    cout &lt;&lt; &quot;猜测扑克牌信息：&quot; &lt;&lt; endl;&#10;    cout &lt;&lt; num &lt;&lt; &quot;;&quot; &lt;&lt; color &lt;&lt; &quot;;&quot; &lt;&lt; suit &lt;&lt; endl;&#10;&#10;    // 通过嵌套判断，并结合判断语句猜测上述信息，如&#10;    // 先猜数字，成功后猜颜色，再成功猜测具体的花型&#10;    int guess_num;&#10;    cout &lt;&lt; &quot;请猜测扑克牌的数字（1-10）: &quot; &lt;&lt; endl;&#10;    cin &gt;&gt; guess_num;&#10;&#10;    if (guess_num == num) {&#10;        cout &lt;&lt; &quot;猜测数字正确！&quot; &lt;&lt; endl;&#10;&#10;        int guess_color;&#10;        cout &lt;&lt; &quot;请猜测扑克牌的颜色（红色1/黑色0）: &quot; &lt;&lt; endl;&#10;        cin &gt;&gt; guess_color;&#10;&#10;        if (guess_color ? &quot;红色&quot; : &quot;黑色&quot; == color) {&#10;            cout &lt;&lt; &quot;猜测颜色正确！&quot; &lt;&lt; endl;&#10;&#10;            int guess_suit;&#10;            if (color == &quot;红色&quot;)&#10;            {&#10;                cout &lt;&lt; &quot;请猜测扑克牌的花型（红桃1/方块0）: &quot; &lt;&lt; endl;&#10;                cin &gt;&gt; guess_suit;&#10;&#10;                if (guess_suit? &quot;红桃&quot; : &quot;方块&quot; == suit) {&#10;                    cout &lt;&lt; &quot;恭喜你，猜测扑克牌信息全部正确！&quot; &lt;&lt; endl;&#10;                } else {&#10;                    cout &lt;&lt; &quot;猜测花型错误，正确的花型是：&quot; &lt;&lt; suit &lt;&lt; endl;&#10;                }&#10;            }&#10;            else&#10;            {&#10;                cout &lt;&lt; &quot;请猜测扑克牌的花型（黑桃1/梅花0）: &quot; &lt;&lt; endl;&#10;                cin &gt;&gt; guess_suit;&#10;&#10;                if (guess_suit? &quot;黑桃&quot; : &quot;梅花&quot; == suit) {&#10;                    cout &lt;&lt; &quot;恭喜你，猜测扑克牌信息全部正确！&quot; &lt;&lt; endl;&#10;                } else {&#10;                    cout &lt;&lt; &quot;猜测花型错误，正确的花型是：&quot; &lt;&lt; suit &lt;&lt; endl;&#10;                }&#10;            }&#10;        }&#10;    }&#10;    return 0;&#10;}&#10;" />
              <option name="updatedContent" value="/*&#10;*案例需求（猜扑克牌）：&#10;* 随机产出3份信息：&#10;*第一份信息：1~10的数字，代表扑克牌1~10&#10;*第二份信息：字符串，红色或黑色，代表扑克牌的花色&#10;*第三份信息：字符串，如果是红色产出红桃或方块，如果是黑色产出黑桃或梅花&#10;* 案例要求:&#10;*通过嵌套判断，并结合判断语句猜测上述信息，如&#10;*先猜数字，成功后猜颜色，再成功猜测具体的花型&#10;*/&#10;#include &lt;iostream&gt;&#10;#include &lt;random&gt;&#10;&#10;using namespace std;&#10;&#10;// 生成[min, max]范围内的随机整数&#10;int get_random_num(int min, int max)&#10;{&#10;    // 创建随机数生成器&#10;    random_device rd;&#10;    mt19937 gen(rd());&#10;&#10;    // 定义均匀分布&#10;    uniform_int_distribution&lt;&gt; dis(min, max);&#10;&#10;    // 生成随机数&#10;    int random_number = dis(gen);&#10;    return random_number;&#10;}&#10;&#10;int main ()&#10;{&#10;    // 第一份信息：1~10的数字，代表扑克牌1~10&#10;    int num = get_random_num(1, 10);&#10;    // 第二份信息：字符串，红色0或黑色1，代表扑克牌的花色&#10;    string color = get_random_num(0, 1) ? &quot;红色&quot; : &quot;黑色&quot;;&#10;    // 第三份信息：字符串，如果是红色产出红桃或方块，如果是黑色产出黑桃或梅花&#10;    string suit;&#10;    if (color == &quot;红色&quot;)&#10;    {&#10;        suit = get_random_num(0, 1) ? &quot;红桃&quot; : &quot;方块&quot;;&#10;    }&#10;    else&#10;    {&#10;        suit = get_random_num(0, 1) ? &quot;黑桃&quot; : &quot;梅花&quot;;&#10;    }&#10;&#10;    cout &lt;&lt; &quot;猜测扑克牌信息：&quot; &lt;&lt; endl;&#10;    cout &lt;&lt; num &lt;&lt; &quot;;&quot; &lt;&lt; color &lt;&lt; &quot;;&quot; &lt;&lt; suit &lt;&lt; endl;&#10;&#10;    // 通过嵌套判断，并结合判断语句猜测上述信息，如&#10;    // 先猜数字，成功后猜颜色，再成功猜测具体的花型&#10;    int guess_num;&#10;    cout &lt;&lt; &quot;请猜测扑克牌的数字（1-10）: &quot; &lt;&lt; endl;&#10;    cin &gt;&gt; guess_num;&#10;&#10;    if (guess_num == num) {&#10;        cout &lt;&lt; &quot;猜测数字正确！&quot; &lt;&lt; endl;&#10;&#10;        int guess_color;&#10;        cout &lt;&lt; &quot;请猜测扑克牌的颜色（红色1/黑色0）: &quot; &lt;&lt; endl;&#10;        cin &gt;&gt; guess_color;&#10;&#10;        if (guess_color ? &quot;红色&quot; : &quot;黑色&quot; == color) {&#10;            cout &lt;&lt; &quot;猜测颜色正确！&quot; &lt;&lt; endl;&#10;&#10;            int guess_suit;&#10;            if (color == &quot;红色&quot;)&#10;            {&#10;                cout &lt;&lt; &quot;请猜测扑克牌的花型（红桃1/方块0）: &quot; &lt;&lt; endl;&#10;                cin &gt;&gt; guess_suit;&#10;&#10;                if (guess_suit? &quot;红桃&quot; : &quot;方块&quot; == suit) {&#10;                    cout &lt;&lt; &quot;恭喜你，猜测扑克牌信息全部正确！&quot; &lt;&lt; endl;&#10;                } else {&#10;                    cout &lt;&lt; &quot;猜测花型错误，正确的花型是：&quot; &lt;&lt; suit &lt;&lt; endl;&#10;                }&#10;            }&#10;            else&#10;            {&#10;                cout &lt;&lt; &quot;请猜测扑克牌的花型（黑桃1/梅花0）: &quot; &lt;&lt; endl;&#10;                cin &gt;&gt; guess_suit;&#10;&#10;                if (guess_suit? &quot;黑桃&quot; : &quot;梅花&quot; == suit) {&#10;                    cout &lt;&lt; &quot;恭喜你，猜测扑克牌信息全部正确！&quot; &lt;&lt; endl;&#10;                } else {&#10;                    cout &lt;&lt; &quot;猜测花型错误，正确的花型是：&quot; &lt;&lt; suit &lt;&lt; endl;&#10;                }&#10;            }&#10;        }&#10;    }&#10;    return 0;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>